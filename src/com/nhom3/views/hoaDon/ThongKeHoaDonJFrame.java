/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nhom3.views.hoaDon;

import com.nhom3.entity.HoaDon;
import com.nhom3.service.HoaDonService;
import java.awt.Font;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.TableRowAlign;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

/**
 *
 * @author Hoang Viet
 */
public class ThongKeHoaDonJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ThongKeHoaDonJFrame
     */
    DefaultTableModel defaultTableModel;
    int thuTu;
    HoaDonService hoaDonService = new HoaDonService();
    ArrayList<HoaDon> hoaDons;

    public ThongKeHoaDonJFrame() {
        initComponents();
        setLocationRelativeTo(null);
        JTableHeader jTableHeader = thongKeHoaDonTable.getTableHeader();
        Font f = new Font("Tahoma", Font.PLAIN, 18);
        jTableHeader.setFont(f);
        defaultTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };
        thongKeHoaDonTable.setModel(defaultTableModel);
    }

    private void setData(ArrayList<HoaDon> hoaDons, String comboBox) {
        thuTu = 0;
        switch (comboBox) {
            case "MaKH":
                defaultTableModel.addColumn("Thứ tự");
                defaultTableModel.addColumn("Mã khách hàng");
                defaultTableModel.addColumn("Số lượng");
                defaultTableModel.addColumn("Tổng doanh thu");
                for (HoaDon hoaDon : hoaDons) {
                    thuTu++;
                    defaultTableModel.addRow(new Object[]{thuTu, hoaDon.getMaKH(),
                        hoaDon.getSoLuong(), hoaDon.getTongDoanhThu()});
                }
                break;
            case "MaNhanVien":
                defaultTableModel.addColumn("Thứ tự");
                defaultTableModel.addColumn("Mã nhân viên");
                defaultTableModel.addColumn("Số lượng");
                defaultTableModel.addColumn("Tổng doanh thu");
                for (HoaDon hoaDon : hoaDons) {
                    thuTu++;
                    defaultTableModel.addRow(new Object[]{thuTu, hoaDon.getMaNhanVien(),
                        hoaDon.getSoLuong(), hoaDon.getTongDoanhThu()});
                }
                break;
            case "Ngay":
                defaultTableModel.addColumn("Thứ tự");
                defaultTableModel.addColumn("Ngày");
                defaultTableModel.addColumn("Số lượng");
                defaultTableModel.addColumn("Tổng doanh thu");
                for (HoaDon hoaDon : hoaDons) {
                    thuTu++;
                    defaultTableModel.addRow(new Object[]{thuTu, hoaDon.getNgay(),
                        hoaDon.getSoLuong(), hoaDon.getTongDoanhThu()});
                }
                break;
            case "Thang":
                defaultTableModel.addColumn("Thứ tự");
                defaultTableModel.addColumn("Tháng");
                defaultTableModel.addColumn("Số lượng");
                defaultTableModel.addColumn("Tổng doanh thu");
                for (HoaDon hoaDon : hoaDons) {
                    thuTu++;
                    defaultTableModel.addRow(new Object[]{thuTu, hoaDon.getThang(),
                        hoaDon.getSoLuong(), hoaDon.getTongDoanhThu()});
                }
                break;
            case "Nam":
                defaultTableModel.addColumn("Thứ tự");
                defaultTableModel.addColumn("Năm");
                defaultTableModel.addColumn("Số lượng");
                defaultTableModel.addColumn("Tổng doanh thu");
                for (HoaDon hoaDon : hoaDons) {
                    thuTu++;
                    defaultTableModel.addRow(new Object[]{thuTu, hoaDon.getNam(),
                        hoaDon.getSoLuong(), hoaDon.getTongDoanhThu()});
                }
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        thongKeComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        thongKeHoaDonTable = new javax.swing.JTable();
        submit = new javax.swing.JButton();
        exportFileButton = new javax.swing.JButton();
        fileNameTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(178, 190, 195));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Thống kê hóa đơn theo");

        thongKeComboBox.setBackground(new java.awt.Color(153, 153, 153));
        thongKeComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        thongKeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã khách hàng", "Mã nhân viên", "Theo ngày", "Theo tháng", "Theo năm" }));
        thongKeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thongKeComboBoxActionPerformed(evt);
            }
        });

        thongKeHoaDonTable.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        thongKeHoaDonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        thongKeHoaDonTable.setRowHeight(25);
        thongKeHoaDonTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(thongKeHoaDonTable);

        submit.setBackground(new java.awt.Color(51, 153, 0));
        submit.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setText("Thống kê");
        submit.setBorder(null);
        submit.setBorderPainted(false);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        exportFileButton.setBackground(new java.awt.Color(51, 0, 153));
        exportFileButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        exportFileButton.setForeground(new java.awt.Color(255, 255, 255));
        exportFileButton.setText("Xuất File");
        exportFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportFileButtonActionPerformed(evt);
            }
        });

        fileNameTextField.setText("Tên File");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportFileButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(thongKeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thongKeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void thongKeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thongKeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thongKeComboBoxActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        switch (String.valueOf(thongKeComboBox.getSelectedItem())) {
            case "Mã khách hàng":
                defaultTableModel.setRowCount(0);
                defaultTableModel.setColumnCount(0);
                hoaDons = hoaDonService.thongKeHoaDon("MaKH");
                setData(hoaDons, "MaKH");
                break;
            case "Mã nhân viên":
                defaultTableModel.setRowCount(0);
                defaultTableModel.setColumnCount(0);
                hoaDons = hoaDonService.thongKeHoaDon("MaNhanVien");
                setData(hoaDons, "MaNhanVien");
                break;
            case "Theo ngày":
                defaultTableModel.setRowCount(0);
                defaultTableModel.setColumnCount(0);
                hoaDons = hoaDonService.thongKeHoaDon("Ngay");
                setData(hoaDons, "Ngay");
                break;
            case "Theo tháng":
                defaultTableModel.setRowCount(0);
                defaultTableModel.setColumnCount(0);
                hoaDons = hoaDonService.thongKeHoaDon("Thang");
                setData(hoaDons, "Thang");
                break;
            case "Theo năm":
                defaultTableModel.setRowCount(0);
                defaultTableModel.setColumnCount(0);
                hoaDons = hoaDonService.thongKeHoaDon("Nam");
                setData(hoaDons, "Nam");
                break;

        }
    }//GEN-LAST:event_submitActionPerformed

    private void exportFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportFileButtonActionPerformed
        StringBuffer path = new StringBuffer();
        path.append("D://");
        path.append(fileNameTextField.getText());
        path.append(".doc");
        String path2 = path.toString();

        try {
            ExportFileWord(thongKeHoaDonTable, path2);
            JOptionPane.showMessageDialog(null, "Lưu file thành công!");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lưu file không thành công!");
        }
    }//GEN-LAST:event_exportFileButtonActionPerformed

    public void ExportFileWord(JTable table, String fileName) {
        try {

            //Bước 1: Khởi tạo đối tượng để sinh ra file word
            XWPFDocument document = new XWPFDocument();

            //Bước 2: Tạo tiêu đề bài viết
            XWPFParagraph titleGraph = document.createParagraph();

            //titleGraph.setAlignment(ParagraphAlignment.CENTER);
            String quocHieu = "THƯ VIỆN TẠ QUANG BỬU      		          CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM";

            XWPFRun titleRun = titleGraph.createRun();

            titleRun.setBold(true);

            titleRun.setText(quocHieu);
            titleRun.setFontSize(12);
            titleRun.setFontFamily("Times New Roman");

            XWPFParagraph paragraph1 = document.createParagraph();
            XWPFRun run = paragraph1.createRun();
            run.setText("              NHÓM 3				     Độc lập - Tự do – Hạnh phúc");
            run.setFontSize(12);
            run.setBold(true);
            run.setFontFamily("Times New Roman");

            XWPFParagraph ngayThang = document.createParagraph();
            XWPFRun run2 = ngayThang.createRun();
            ngayThang.setAlignment(ParagraphAlignment.RIGHT);
            run2.setText("Ngày 16 tháng 5 năm 2019       ");
            run2.setFontSize(12);
            run2.setItalic(true);
            run2.setFontFamily("Times New Roman");

            XWPFParagraph khoangTrang = document.createParagraph();
            XWPFRun run3 = ngayThang.createRun();
            run3.setText("");

            XWPFParagraph tenBieuMau = document.createParagraph();
            XWPFRun run4 = tenBieuMau.createRun();
            tenBieuMau.setAlignment(ParagraphAlignment.CENTER);
            run4.setText("\n\nTHỐNG KÊ HÓA ĐƠN  \n\n");
            run4.setFontSize(12);
            run4.setFontFamily("Times New Roman");
            run4.setBold(true);

            XWPFParagraph khoangTrang2 = document.createParagraph();
            XWPFRun run5 = ngayThang.createRun();
            run5.setText("");

            XWPFTable createTable = document.createTable();
            createTable.setTableAlignment(TableRowAlign.CENTER);
            createTable.getCellMarginLeft();
            //create first row
            XWPFTableRow tableRowOne = createTable.getRow(0);
            tableRowOne.getCell(0).setText(" STT ");
            switch (String.valueOf(thongKeComboBox.getSelectedItem())) {
                case "Mã khách hàng":
                    tableRowOne.addNewTableCell().setText(" Mã khách hàng ");
                    break;
                case "Mã nhân viên":
                    tableRowOne.addNewTableCell().setText(" Mã nhân viên ");
                    break;
                case "Ngày":
                    tableRowOne.addNewTableCell().setText(" Ngày ");
                    break;
                case "Tháng":
                    tableRowOne.addNewTableCell().setText(" Tháng ");
                    break;
                case "Năm":
                    tableRowOne.addNewTableCell().setText(" Năm ");
                    break;
            }
            tableRowOne.addNewTableCell().setText(" Số lượng");
            TableModel model = table.getModel();

            //int stt=1;
            for (int rows = 0; rows < model.getRowCount(); rows++) { //For each table row
                XWPFTableRow tableRowTwo = createTable.createRow();
                //tableRowTwo.getCell(0).setText(" "+String.valueOf(stt));
                for (int cols = 0; cols < model.getColumnCount(); cols++) { //For each table column
                    tableRowTwo.getCell(cols).setText("                  " + model.getValueAt(rows, cols).toString() + "                  .");
                }
                //stt++;
            }

            XWPFParagraph khoangTrang3 = document.createParagraph();
            XWPFRun run6 = khoangTrang3.createRun();
            run6.setText("");

            XWPFParagraph chuKy = document.createParagraph();
            XWPFRun run7 = chuKy.createRun();
            run7.setText("Người lập \n														                                Xác nhận của thủ thư");
            run7.setFontSize(12);
            run7.setFontFamily("Times New Roman");
            run7.setBold(true);
            chuKy.setAlignment(ParagraphAlignment.CENTER);

            //Ghi dữ liệu ra file word
            FileOutputStream out = new FileOutputStream(fileName);

            document.write(out);

            out.close();

            document.close();

        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeHoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeHoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeHoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeHoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeHoaDonJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportFileButton;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submit;
    private javax.swing.JComboBox<String> thongKeComboBox;
    private javax.swing.JTable thongKeHoaDonTable;
    // End of variables declaration//GEN-END:variables
}
